schema {
  query: Query
}

type OidcError {
  message: String
  stack: String
}

input OidcErrorInput {
  message: String
  stack: String
}

type NgOidcInfo {
  expiring: Boolean
  loading: Boolean
  errors: [OidcError]!
}

input NgOidcInfoInput {
  expiring: Boolean
  loading: Boolean
  errors: [OidcErrorInput]!
}


type Profile {
  sid: String
  sub: String
  auth_time: Int
  idp: String
  amr: [String]
  name: String
}

input ProfileInput {
 sid: String
  sub: String
  auth_time: Int
  idp: String
  amr: [String]
  name: String
}

type Identity {
  id_token: String
  profile: Profile
  session_state: String
  access_token: String
  token_type: String
  scope: [String]
  expires_at: Int
  expires_in: Int
  expired: Boolean
}

input IdentityInput {
  id_token: String
  profile: ProfileInput
  session_state: String
  access_token: String
  token_type: String
  scope: [String]
  expires_at: Int
  expires_in: Int
  expired: Boolean
}



type Query {
  identity: Identity
  ngOidcInfo: NgOidcInfo
}

type Mutation {
  addIdentity(identity:IdentityInput):Identity
  updateNgOidcInfo(info:NgOidcInfoInput):NgOidcInfo
}


